name: Terraform GitOps Workflow
run-name: TerraformCD

on:
  push:
    branches:
      - feature/*
  pull_request:
    types: [closed]
  workflow_dispatch:
    inputs:
      TF_LOG:
        description: "Run Terraform in log mode"
        required: true
        type: choice
        options:
          - "DEBUG"
          - "INFO"
          - "WARN"
          - "ERROR"
        default: "INFO"

env:
  TF_VERSION: "1.5.7"
  AWS_REGION: "us-east-1"

jobs:
  terraform-plan:
    runs-on: terraformcd
    permissions:
      contents: read
      pull-requests: write
    steps:
      # - name: Install Dependencies
      #   run: |
      #     if ! command -v gh &>/dev/null; then
      #       echo "Installing GitHub CLI..."
      #       curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
      #       sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
      #       echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
      #       sudo apt update && sudo apt install gh -y
      #     else
      #       echo "GitHub CLI already installed."
      #     fi
      #     sudo apt update && sudo apt install jq -y

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Terraform Init
        working-directory: infra
        run: terraform init

      - name: Terraform Plan
        working-directory: infra
        run: terraform plan -out=tfplan -input=false
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          TF_LOG: ${{ inputs.TF_LOG }}

      - name: Upload Plan Artifact
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan
          path: infra/tfplan

      # - name: Post Plan Summary in PR (if on main branch)
      #   if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
      #   working-directory: infra
      #   run: |
      #     echo "### Terraform Plan Summary" > plan-summary.md
      #     terraform show -json tfplan | jq '.' >> plan-summary.md
      #     gh pr comment ${{ github.event.pull_request.number }} -F plan-summary.md

  manual-approval:
    needs: terraform-plan
    runs-on: terraformcd
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
    steps:
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: ${{ vars.TERRAFORM_MANUAL_APPROVALS }}
          minimum-approvals: 1
          issue-title: "Terraform Apply Approval Request"
          issue-body: "Please approve or deny the terraform apply command"

  terraform-apply:
    needs: manual-approval
    runs-on: terraformcd
    if: github.event_name != 'workflow_dispatch' || github.ref == 'refs/heads/main'
    permissions:
      contents: read
    steps:
      - name: Download Plan Artifact
        uses: actions/download-artifact@v3
        with:
          name: terraform-plan

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
          TF_LOG: ${{ inputs.TF_LOG }}

      - name: Terraform Apply
        working-directory: infra
        run: terraform apply -input=false tfplan
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
          TF_LOG: ${{ inputs.TF_LOG }}
